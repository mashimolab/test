!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Datamate=e():t.Datamate=e()}(self,(function(){return(()=>{"use strict";var t={d:(e,n)=>{for(var s in n)t.o(n,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:n[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{default:()=>m});class n{constructor(){this.filePaths=new Array,this.isAvailable=!1,this.callback=null,this.dataset=new Array}clear(){this.filePaths=new Array,this.dataset=new Array}showFileSelectionButton(){this.selectionViewElement=window.document.createElement("div"),this.selectionViewElement.innerHTML=this.template(),window.document.body.appendChild(this.selectionViewElement);const t=this.selectionViewElement.querySelector("#file-select");t.addEventListener("change",function(e){const n=t.files;for(let t=0;t<n.length;t++){const e=n[t],s=window.URL.createObjectURL(e);this.addFilePath(s)}this.selectionViewElement.remove(),this.load()}.bind(this)),this.selectionViewElement.querySelector("#closebox").addEventListener("mousedown",function(t){this.selectionViewElement.remove()}.bind(this))}addFilePath(t){this.filePaths.push(t)}loadSync(){for(let t=0;t<this.filePaths.length;t++){const e=this.filePaths[t],n=new XMLHttpRequest;n.open("get",e,!1),n.setRequestHeader("Content-Type","text/plane"),n.send(null);let s=n.responseText;s=s.replace(/\"/g,""),this.dataset.push(s),console.log("DatamateFileLoader: Loaded Sync:",e,s)}this.isAvailable=!0,console.log("DatamateFileLoader: Load Completed:"),this.callback&&this.callback(),window.loadedDatamate&&window.loadedDatamate()}async load(){for(let t=0;t<this.filePaths.length;t++){const e=this.filePaths[t],n=await fetch(e);let s=await n.text();s=s.replace(/\"/g,""),this.dataset.push(s),console.log("DatamateFileLoader: Loaded:",e,n)}this.isAvailable=!0,console.log("DatamateFileLoader: Load Completed:"),this.callback&&this.callback(),window.loadedDatamate&&window.loadedDatamate()}template(){return'\n\t\t<style>\n\t\t\t@import url(\'https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400&display=swap\');\n\t\t\t#filedialog {\n\t\t\t\tmargin: 0px;\n\t\t\t\tpadding: 0px;\n\t\t\t\ttext-decoration: none;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tlist-style: none;\n\t\t\t\tbox-sizing: border-box;\n\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tcolor: white;\n\t\t\t\tfont-size: 13px;\n\t\t\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0px;\n\t\t\t\tleft: 0px;\n\t\t\t\tfont-family: \'Roboto Condensed\', sans-serif;\n\n\t\t\t\tdisplay: flex;\n\t\t\t    flex-direction: column;\n\t\t\t    justify-content: center;\n\t\t\t    align-items: center;\n\t\t\t}\n\t\t\t#file-select {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t#file-select-button {\n\t\t\t\tcursor: pointer;\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin: auto;\n\t\t\t\tborder: 1px solid white;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 20px 60px;\n\t\t\t\tbackground-color: gray;\n\t\t\t\tbox-shadow: 1px 1px 10px 10px rgba(255,255,255,0.2);\n\t\t\t}\n\t\t\t#closebox {\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 50px;\n\t\t\t\tright: 50px;\n\t\t\t\tpadding: 10px 30px;\n\t\t\t\tcursor: pointer;\n\t\t\t\tborder: 1px solid gray;\n\t\t\t\tborder-radius: 10px;\n\t\t\t}\n\t\t</style>\n\t\t<div id="filedialog">\n\t\t\t<div>\n\t\t\t\t<input id="file-select" type="file" value="SELECT CSV" multiple="multiple" accept=".csv">\n\t\t\t\t<label id="file-select-button" for="file-select">\n\t\t\t\t\t<h1>SELECT CSVs</h1>\n\t\t\t\t</label>\n\t\t\t<div>\n\t\t\t<div id="closebox">CLOSE</div>\n\t\t</div>'}}class s{static map(t,e,n,s,i,a){var l=n-e;if(0==l)return s;var o=(t-e)/l;return a&&(o=Math.max(0,Math.min(1,o))),(i-s)*o+s}constructor(t,e,n,s,i){this.sourceMin=t,this.sourceMax=e,this.targetMin=n,this.targetMax=s,this.isClamp=i}map(t){var e=self.sourceMax-self.sourceMin;if(0==e)return self.targetMin;var n=(t-self.sourceMin)/e;return self.isClamp&&(n=Math.max(0,Math.min(1,n))),(self.targetMax-self.targetMin)*n+self.targetMin}}class i{constructor(){this.x=0,this.y=0,this.value=0,this.data=null,this.column=null,this.row=null}map(t,e){const n=Number(this.value);if(isNaN(n))return value;const i=this.data.column;return t==e?t:s.map(n,i.min,i.max,t,e)}current(t=0,e=0){}offset(t=0,e=0,n=0){}}class a{constructor(t,e){this.area=null,this.table=t,this.name=e,this.rows=new Map,this.sum=0,this.min=1/0,this.max=-1/0,this.node=new i,this.node.column=this}setArea(t){this.area=t,this.area.name=this.name}allData(){return Array.from(this.rows.values)}getData(t){return this.rows.has(t)?this.rows.get(t):null}getDataAt(t){const e=this.table.getRowHeaders();return t<e.length?this.rows.get(e[t]):null}setData(t){this.rows.set(t.row.name,t);const e=t.floatValue();isNaN(e)||(this.sum+=e,this.average=this.sum/this.rows.size,this.min=Math.min(e,this.min),this.max=Math.max(e,this.max))}deleteData(t){this.rows.has(t.column.name)&&this.rows.delete(t.column.name)}}class l{constructor(t,e){this.area=null,this.table=t,this.name=e,this.columns=new Map,this.sum=0,this.average=0,this.min=1/0,this.max=-1/0,this.node=new i,this.node.row=this}allData(){return Array.from(this.columns.values)}getData(t){return this.columns.has(t)?this.columns.get(t):null}getDataAt(t){const e=this.table.getColumnHeaders();return t<e.length?this.columns.get(e[t]):null}setData(t){this.columns.set(t.column.name,t);const e=t.floatValue();isNaN(e)||(this.sum+=e,this.average=this.sum/this.columns.size,this.min=Math.min(e,this.min),this.max=Math.max(e,this.max))}deleteData(t){this.columns.has(t.row.name)&&this.columns.delete(t.row.name)}}class o{constructor(t){this.area=null,this.value=t,this.column=null,this.row=null,this.node=new i,this.node.data=this,this.node.value=this.value}bind(t,e){null!==this.column&&this.column.deleteData(this),null!==this.row&&this.row.deleteData(this),this.column=t,this.row=e,this.column.setData(this),this.row.setData(this)}get columnName(){return this.column.name}get rowName(){return this.row.name}get columnMin(){return this.column.min}get columnMax(){return this.column.max}get rowMin(){return this.row.min}get rowMax(){return this.row.max}intValue(){return Math.floor(Number(this.value))}floatValue(){return Number(this.value)}stringValue(){return this.value}}class h{constructor(t=!0,e=!1){this.columns=new Map,this.rows=new Map,this.hasColumnHeader=t,this.hasRowHeader=e,this.isAvailable=!1,this.columnHeaders=[],this.rowHeaders=[],this.min=1/0,this.max=-1/0,this.focusRowIndex=0,this.playInterval=null,this.playIntervalSeconds=1}clear(){this.columns.clear(),this.rows.clear(),this.hasColumnHeader=!0,this.hasRowHeader=!1,this.isAvailable=!1}update(){this.columnHeaders=Array.from(this.columns.keys()),this.rowHeaders=Array.from(this.rows.keys()),this.min=1/0,this.max=-1/0;for(let t=0;t<this.columnHeaders.length;t++){const e=this.columnHeaders[t],n=this.columns.get(e);this.min=Math.min(this.min,n.min),this.max=Math.max(this.max,n.max)}console.log("DatamateTable: update properties:"),console.log("\tmin: ",this.min),console.log("\tmax: ",this.max),console.log("\tcolumn-count",this.getColumnCount()),console.log("\trow-count:",this.getRowCount()),this.isAvailable=!0}parseCSV(t){const e=(t=(t=t.replace("\r\n","\n")).replace("\r","\n")).split("\n"),n=e[0].split(",");this.columns.clear(),this.rows.clear();for(let t=0;t<n.length;t++){const e=this.hasColumnHeader?n[t]:t;this.columns.set(e,new a(e))}const s=Array.from(this.columns.keys());this.hasColumnHeader&&e.shift();for(let t=0;t<e.length;t++){const i=e[t].split(",");if(i.length!=n.length)continue;const a=this.hasRowHeader?i[0]:t;this.rows.has(a)||this.rows.set(a,new l(this,a));const h=this.rows.get(a);for(let t=0;t<i.length;t++){if(0==t&&this.hasRowHeader)continue;const e=i[t],n=s[t],a=this.columns.get(n);new o(e).bind(a,h)}}this.update()}merge(t){const e=t.getColumnHeaders(),n=t.getRowHeaders(),s=(t.getRowCount(),this.getRowCount());for(let i=0;i<e.length;i++){const o=e[i];this.columns.has(o)||this.columns.set(o,new a(this,o));const h=this.columns.get(o);for(let e=0;e<n.length;e++){const i=n[e],a=t.hasRowHeader?n[e]:e+s;this.rows.has(a)||this.rows.set(a,new l(this,a));const r=this.rows.get(a);t.getData(o,i).bind(h,r)}}this.update()}setHeaders(t){for(let e=0;e<t.length;e++){const n=t[e];this.columns.has(n)||this.columns.set(n,new a(this,n))}this.update()}setValues(t,e){this.columns.has(t)||this.columns.set(t,new a(this,t));const n=this.columns.get(t);for(let t=0;t<e.length;t++){const s=this.hasRowHeader?e[0]:t;this.rows.has(s)||this.rows.set(s,new l(this,s));const i=this.rows.get(s);new o(e[t]).bind(n,i)}this.update()}getValue(t,e){if(!this.columns.has(t)||!this.rows.has(e))return"";const n=this.columns.get(t).getData(e);return null!==n?n.value:""}getData(t,e){return this.columns.has(t)&&this.rows.has(e)?this.columns.get(t).getData(e):null}getDataAtIndex(t,e){const n=this.getColumnHeaders(),s=this.getRowHeaders();if(t>=n.length||e>=s.length)return null;const i=n[t],a=s[e];return this.columns.get(i).getData(a)}getColumnHeaders(){return this.columnHeaders}getRowHeaders(){return this.rowHeaders}getColumnCount(){return this.columns.size}getRowCount(){return this.rows.size}getRow(t){return this.getRowHeaders().indexOf(t)<0?null:this.rows.get(t)}getColumn(t){return this.getColumnHeaders().indexOf(t)<0?null:this.columns.get(t)}getRowAtIndex(t){const e=this.getRowHeaderAtIndex(t);return null!==e?this.rows.get(e):null}getColumnAtIndex(t){const e=this.getColumnHeaderAtIndex(t);return null!==e?this.columns.get(e):null}getRowHeaderAtIndex(t){const e=this.getRowHeaders();return t<e.length?e[t]:null}getColumnHeaderAtIndex(t){const e=this.getColumnHeaders();return t<e.length?e[t]:null}getRowsInRange(t,e,n=0){const s=this.getRowHeaders(),i=s.length,a=t,l=new Array;for(let n=0;n<e&&t<i;n++){const t=s[a],e=this.rows.get(t);l.push(e)}return l}getColumnsInRange(t,e,n=0){const s=this.getColumnHeaders(),i=s.length,a=t,l=new Array;for(let n=0;n<e&&t<i;n++){const t=s[a],e=this.columns.get(t);l.push(e)}return l}getNode(t=null,e=null){return null===t&&null===e?null:null!==t&&null===e?this.getColumnNode(t,e):null===t&&null!==e?this.getRowNode(e):null!==t&&null!==e?this.getDataNode(t,e):void 0}getColumnNode(t){const e=this.getColumn(t);return null!==e?e.node:null}getRowNode(t){const e=this.getRow(t);return null!==e?e.node:null}getDataNode(t,e){const n=this.getData(t,e);return n.node.x=n.column.node.x,n.node.y=n.column.node.y,null!==n?n.node:null}get isLastRowIndex(){return this.focusRowIndex==this.getRowCount()-1}focus(t){this.focusRowIndex=Math.max(0,Math.min(t,this.getRowCount()-1))}forwardFocus(){this.focus(this.focusRowIndex+1)}backwordFocus(){this.forcus(this.focusRowIndex-1)}play(t=1){this.playIntervalSeconds=t,this.playInterval&&clearInterval(this.playInterval),this.playInterval=setInterval(function(t){this.forwardFocus()}.bind(this),1e3*this.playIntervalSeconds)}}class r{constructor(){this.isPlaying=!1,this.startTime=null,this.frameRate=1,this.interval=1/this.frameRate,this.currentFrame=0}start(t=1,e){this.frameRate=t,this.interval=1/t,this.table=e,this.currentFrame=0,this.startTime=(new Date).getTime()/1e3,this.isPlaying=!0}stop(){this.isPlaying=!1}current(t,e=!1){if(!this.isPlaying)return;const n=(new Date).getTime()/1e3-this.startTime,i=Math.floor(n/this.interval),a=this.table.getRowCount(),l=i%a,o=(i+1)%a,h=(n-i*this.interval)/this.interval,r=this.table.getRowHeaderAtIndex(l),d=this.table.getRowHeaderAtIndex(o),c=this.table.getValue(t,r),u=this.table.getValue(t,d),m=Number(c),g=Number(u);return Number.isNaN(m)?c:e?s.map(h,0,1,m,g):m}currentIndex(){if(!this.isPlaying)return 0;const t=(new Date).getTime()/1e3-this.startTime;return Math.floor(t/this.interval)%this.table.getRowCount()}}class d{constructor(t=0,e=0,n=1,s=1,i=1,a=1,l=0,o=0){this.reset(t,e,n,s,i,a,l,o)}reset(t=0,e=0,n=1,i=1,a=1,l=1,o=0,h=0,r=0){this.index=r,this.name="",this.areaX=t,this.areaY=e,this.areaWidth=n,this.areaHeight=i,this.xBlocks=Math.max(1,a),this.yBlocks=Math.max(1,l),this.xBlockIndex=o,this.yBlockIndex=h,this.width=this.areaWidth/this.xBlocks,this.height=this.areaHeight/this.yBlocks,this.x=s.map(this.xBlockIndex,0,this.xBlocks,this.areaX,this.areaWidth),this.y=s.map(this.yBlockIndex,0,this.yBlocks,this.areaY,this.areaHeight),this.left=s.map(0,0,1,this.x,this.x+this.width),this.centerX=s.map(.5,0,1,this.x,this.x+this.width),this.right=s.map(1,0,1,this.x,this.x+this.width),this.top=s.map(0,0,1,this.y,this.y+this.height),this.centerY=s.map(.5,0,1,this.y,this.y+this.height),this.bottom=s.map(1,0,1,this.y,this.y+this.height)}block(t,e,n=0){return new d(this.areaX,this.areaY,this.areaWidth,this.areaHeight,this.xBlocks,this.yBlocks,t,e,n)}}class c{constructor(t=1e3){this.scale=1,this.frameWidth=t,this.plotWidth=this.frameWidth*this.scale,this.plotCenter=0,this.setScale(this.scale)}setScale(t){this.scale;const e=this.plotCenter/this.scale;this.scale=t,this.plotWidth=this.frameWidth*this.scale,this.plotCenter=e*this.scale,this.movableRange=.5*(this.plotWidth-this.frameWidth),this.plotCenter=Math.max(-this.movableRange,Math.min(this.movableRange,this.plotCenter))}moveBy(t){this.plotCenter+=t,this.movableRange=.5*(this.plotWidth-this.frameWidth),this.plotCenter=Math.max(-this.movableRange,Math.min(this.movableRange,this.plotCenter))}moveToIndex(t,e){this.plotCenter=0==this.movableRange?0:-1*s.map(t,0,e,-.5*this.plotWidth,.5*this.plotWidth),this.plotCenter=Math.max(-this.movableRange,Math.min(this.movableRange,this.plotCenter))}indexFromFrameX(t,e){const n=this.plotCenter-.5*this.plotWidth,i=this.plotCenter+.5*this.plotWidth,a=t-.5*this.frameWidth;return Math.floor(s.map(a,n,i,0,e))}}class u{static version="1.0.0";constructor(t="DatamatePanel",e=!0){this.name=t,this.isLoaded=!1,this.isVisible=!1,this.isDataAvailable=!1,this.table=null,this.min=0,this.max=100,this.scalableMin=1,this.scalableMac=10,this.graphScale=1,this.pixelOffset=0,this.graphColors=["rgba(255,255,255,0.8)"],this.plotter=new c,this.highlightColIndex=-1,this.highlightRowIndex=-1,this.highlightTR=null,this.styles={color:"white",background:"rgba(20, 20, 2\t0, 0.75)"},this.barColor="white",this.highlightColor="red",this.fileSelectionCallback=null,this.load()}load(){if(this.isLoaded)return;this.shouldUpdate=!0,this.interval&&clearInterval(this.interval),this.interval=setInterval(this.update.bind(this),1e3/30),this.panelContainerElement=window.document.createElement("div"),this.panelContainerElement.innerHTML=this.template(),window.document.body.appendChild(this.panelContainerElement),this.panelElement=this.panelContainerElement.querySelector("#panel"),this.panelElement.style.top="-100%",this.panelElement.addEventListener("transitionend",function(t){"-100%"==this.panelElement.style.top&&(this.panelElement.style.visibility="hidden")}.bind(this));const t=this.panelElement.querySelector("#file-select");t.addEventListener("change",function(e){const n=t.files,s=new Array;for(let t=0;t<n.length;t++){const e=n[t],i=window.URL.createObjectURL(e);s.push(i)}this.fileSelectionCallback&&this.fileSelectionCallback(s)}.bind(this)),this.panelElement.querySelector("#clearbutton").addEventListener("mousedown",function(t){this.clearAll()}.bind(this)),this.panelElement.querySelector("#closebox").addEventListener("mousedown",function(t){this.hide()}.bind(this));let e=null;e=this.panelElement.querySelector("#min input"),e.value=this.min,e.addEventListener("change",function(t){this.min=parseFloat(t.currentTarget.value),this.shouldUpdate=!0}.bind(this)),e=this.panelElement.querySelector("#max input"),e.value=this.max,e.addEventListener("change",function(t){this.max=parseFloat(t.currentTarget.value),this.shouldUpdate=!0}.bind(this)),e=this.panelElement.querySelector("#scale input"),e.min=this.scalableMin,e.max=this.scalableMax,e.addEventListener("input",function(t){this.panelElement.querySelector("#scale .status").innerHTML=t.currentTarget.value,this.plotter.setScale(t.currentTarget.value),this.shouldUpdate=!0}.bind(this));const n=window.devicePixelRatio;e=this.panelElement.querySelector("#graph canvas"),e.width=1e3*n,e.height=400*n,e.addEventListener("mousedown",function(t){if(!this.isDataAvailable)return;const e=this.table.getRowCount();if(t.currentTarget.isMouseDown=!0,t.currentTarget.offsetX=t.offsetX,t.currentTarget.isMouseDown&&!t.shiftKey){const n=t.currentTarget.getBoundingClientRect(),s=t.offsetX*(this.plotter.frameWidth/n.width);this.highlightRowIndex=this.plotter.indexFromFrameX(s,e),this.highlightRow(),this.shouldUpdate=!0}}.bind(this)),e.addEventListener("mouseup",function(t){t.currentTarget.isMouseDown=!1}.bind(this)),e.addEventListener("mouseout",function(t){t.currentTarget.isMouseDown=!1}.bind(this)),e.addEventListener("mousemove",function(t){if(!this.isDataAvailable)return;const e=this.table.getRowCount();if(t.currentTarget.isMouseDown&&!t.shiftKey){const n=t.currentTarget.getBoundingClientRect(),s=t.offsetX*(this.plotter.frameWidth/n.width);this.highlightRowIndex=this.plotter.indexFromFrameX(s,e),this.highlightRow(!0),this.shouldUpdate=!0}t.currentTarget.isMouseDown&&t.shiftKey&&(this.plotter.moveBy(t.offsetX-t.currentTarget.offsetX),t.currentTarget.offsetX=t.offsetX,this.shouldUpdate=!0)}.bind(this)),this.context=e.getContext("2d"),this.context.scale(n,n),this.isLoaded=!0,this.applyCusromStyles()}unload(){this.isLoaded&&(this.interval&&clearInterval(this.interval),this.interval=null,this.panelContainerElement&&this.panelContainerElement.remove(),this.panelContainerElement=null,this.isLoaded=!1)}show(){this.isLoadeded||this.load(),this.isVisible=!0,this.panelElement.style.visibility="",this.panelElement.style.transition="top 0.5s ease-in-out",setTimeout(function(t){this.panelElement.style.top="0px"}.bind(this),1),console.log("DatamatePanel: show")}hide(){this.isLoaded&&(this.isVisible=!1,this.panelElement.style.top="-100%",console.log("DatamatePanel: hide"))}applyCusromStyles(){const t=this.panelElement.querySelector("#custom_style");console.log(t,this.styles);let e="";this.styles.color&&(e+=`color: ${this.styles.color};`),this.styles.color&&(e+=`border-color: ${this.styles.color};`),this.styles.background&&(e+=`background-color: ${this.styles.background};`);let n=`\n\t\t#panel, #controls, #contents, #table thead th, #buttons > div, #buttons > label  {\n\t\t\t${e}\n\t\t}`;t.innerHTML=n}applyHeaderStyles(){const t=this.panelElement.querySelector("#header_style");console.log(t,this.graphColors);const e=this.table.getColumnCount();let n="";for(let t=0;t<e;t++){const e=t+1,s=t%this.graphColors.length;n+=`#table thead th:nth-of-type(${e}) {\n\t\t\t\tcolor: ${this.graphColors[s]};\n\t\t\t}`}t.innerHTML=n,console.log("DatamatePanel: header styles: ",n,t)}rainbow(){const t=this.table.getColumnCount();this.graphColors=[];for(let e=0;e<t;e++){const n=1*e/t*360,s=DatamateColor.RGBFromHSB(n,1,1),i=DatamateColor.HEXFromRGB(s.red,s.green,s.blue);this.graphColors.push(i)}}clearAll(){this.table=null,this.isDataAvailable=!1,this.isLoaded&&(this.panelElement.querySelector("#table").innerHTML="",this.context.clearRect(0,0,1e3,400))}update(){this.isLoaded&&this.isDataAvailable&&this.isVisible&&this.shouldUpdate&&(this.updateGraph(),this.shouldUpdate=!1)}updateTable(t){this.table=t,this.isDataAvailable=!0,this.min=this.table.min,this.max=this.table.max,this.panelElement.querySelector("#min input").value=this.min,this.panelElement.querySelector("#max input").value=this.max,console.log("DatamatePanel: update table",t);const e=this.table.getRowCount();let n=this.panelElement.querySelector("#table");const s=window.document.createElement("table");s.cellSpacing="0px",s.cellPadding="0px";const i=window.document.createElement("thead"),a=window.document.createElement("tr"),l=this.table.getColumnHeaders();for(let t=0;t<l.length;t++){const e=l[t],n=window.document.createElement("th");n.innerHTML=e,n.colIndex=t,n.addEventListener("mouseover",function(t){this.highlightColIndex=parseInt(t.currentTarget.colIndex),this.highlightRow(!1),this.shouldUpdate=!0}.bind(this)),a.appendChild(n)}i.appendChild(a),s.appendChild(i);const o=window.document.createElement("tbody");for(let t=0;t<e;t++){const n=this.table.getRowAtIndex(t),s=window.document.createElement("tr");for(let i=0;i<l.length;i++){const a=l[i],o=n.getData(a),h=window.document.createElement("td");h.innerHTML=o?o.value:"",h.rowIndex=t,h.colIndex=i,h.addEventListener("mousedown",function(t){this.highlightRowIndex=parseInt(t.currentTarget.rowIndex),this.highlightColIndex=parseInt(t.currentTarget.colIndex),this.plotter.moveToIndex(this.highlightRowIndex,e),this.highlightRow(!1),this.shouldUpdate=!0,console.log(this.highlightRowIndex,this.highlightColIndex)}.bind(this)),h.addEventListener("mouseover",function(t){this.highlightRowIndex=parseInt(t.currentTarget.rowIndex),this.highlightColIndex=parseInt(t.currentTarget.colIndex),this.plotter.moveToIndex(this.highlightRowIndex,e),this.highlightRow(!1),this.shouldUpdate=!0}.bind(this)),s.appendChild(h)}o.appendChild(s)}s.appendChild(o),n.appendChild(s),this.applyHeaderStyles(),this.updateGraph()}highlightColomn(){if(!this.isDataAvailable)return;const t=this.table.getColumnCount();if(this.highlightColIndex>=t)return;const e=this.highlightColIndex+1,n=this.panelElement.querySelector("#highlight_style"),s=`\n\t\t\t#table thead th:nth-of-type(${e}) {\n\t\t\t\tbackground-color: ${this.highlightColor};\n\t\t\t}\n\t\t`;n.innerHTML=s}highlightRow(t=!0){if(!this.isDataAvailable)return;const e=this.table.getRowCount();if(this.highlightRowIndex<0||this.highlightRowIndex>=e)return;this.highlightTR&&this.highlightTR.removeAttribute("data-highlight");const n=this.panelElement.querySelectorAll("tbody tr");if(this.highlightTR=n[this.highlightRowIndex],this.highlightTR.setAttribute("data-highlight",!0),t){const t=this.panelElement.querySelector("#table"),n=this.panelElement.querySelector("tbody"),s=this.panelElement.querySelector("thead tr"),i=(t.offsetHeight,s.offsetHeight);n.offsetHeight,t.scrollTop=this.highlightTR.offsetTop,this.highlightRowIndex<e-1&&(t.scrollTop=t.scrollTop-i)}}updateGraph(){if(!this.isDataAvailable)return;this.table.getColumnCount();const t=this.table.getRowCount(),e=this.min,n=this.max;this.context.clearRect(0,0,1e3,400),this.context.strokeWeight=1;const i=this.table.getColumnHeaders(),a=this.table.getRowHeaders();for(let l=0;l<i.length;l++){const o=i[l];this.context.beginPath(),this.context.strokeStyle=l==this.highlightColIndex?this.highlightColor:this.graphColors[l%this.graphColors.length],this.context.lineWidth=l==this.highlightColIndex?"2":"1";let h=-1,r=-1,d=!0;for(let i=0;i<this.plotter.frameWidth;i++){const l=this.plotter.indexFromFrameX(i,t);if(l>=t||l<0||l==h)continue;this.table.getRowAtIndex(l),this.highlightRowIndex>h&&this.highlightRowIndex<=l&&(r=i),h=l;const c=a[l],u=this.table.getData(o,c);if(!u){d=!0;continue}const m=u.floatValue();0==i||d?this.context.moveTo(i,s.map(m,e,n,400,0)):this.context.lineTo(i,s.map(m,e,n,400,0)),d=!1}this.context.stroke(),r>=0&&(this.context.beginPath(),this.context.strokeStyle="orange",this.context.lineWidth="1",this.context.moveTo(r,0),this.context.lineTo(r,400),this.context.stroke())}}template(){return'\n\t\t<div id="panel">\n\t\t\t\x3c!-- template part begin --\x3e\n\t\t\t<style>\n\t\t\t\t@import url(\'https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400&display=swap\');\n\n\t\t\t\t* {\n\t\t\t\t\tmargin: 0px;\n\t\t\t\t\tpadding: 0px;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t}\n\t\t\t\t/* Panel */\n\t\t\t\t#panel, #controls, #contents {\n\t\t\t\t\tbackground-color: rgba(20, 20, 20, 0.8);\n\t\t\t\t}\n\t\t\t\t#panel {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tleft: 0px;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\tfont-family: \'Roboto Condensed\', sans-serif;\n\t\t\t\t}\n\t\t\t\t/* Controls */\n\t\t\t\t#controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tleft: 0px;\n\t\t\t\t\twidth: 200px;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tborder-right: 1px solid gray;\n\t\t\t\t}\n\t\t\t\t#title {\n\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tpadding: 20px 0px;\n\t\t\t\t}\n\t\t\t\t#controls > div > span {\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\twidth: 60px;\n\t\t\t\t}\n\t\t\t\t#controls > div > span.status {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t}\n\t\t\t\tinput {\n\t\t\t\t\tmargin: 4px;\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\n\t\t\t\t/* Contents */\n\t\t\t\t#contents {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tleft: 200px;\n\t\t\t\t\twidth: calc(100% - 200px);\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t#graph {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 50%;\n\t\t\t\t}\n\t\t\t\t#graph canvas {\n\t\t\t\t\tcursor: move;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tpadding: 20px 10px;\n\t\t\t\t}\n\t\t\t\t#table {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 50%;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\toverflow: scroll;\n\t\t\t\t}\n\t\t\t\t#table table {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tborder: 1px solid gray;\n\t\t\t\t}\n\t\t\t\t#table thead th {\n\t\t\t\t\tposition: -webkit-sticky;\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0px;\n\t\t\t\t\tz-index: 9999;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t#table tr {\n\t\t\t\t\tborder: 1px solid gray;\n\t\t\t\t}\n\t\t\t\t#table td, #table th {\n\t\t\t\t\tpadding: 2px 10px;\n\t\t\t\t\tborder: 1px solid gray;\n\t\t\t\t}\n\t\t\t\t#table th {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tbackground-color: rgba(0,0,0,0.8);\n\t\t\t\t}\n\t\t\t\t#table td:hover {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t[data-highlight=true] {\n\t\t\t\t\tcolor: black;\n\t\t\t\t\tbackground-color: orange;\n\t\t\t\t}\n\t\t\t\t#buttons {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 160px;\n\t\t\t\t\tbottom: 20px;\n\t\t\t\t\tleft: 20px;\n\t\t\t\t}\n\t\t\t\t#buttons > div,\n\t\t\t\t#buttons > label {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tpadding: 10px 20px;\n\t\t\t\t\tmargin: 10px 0px;\n\t\t\t\t\tborder: 1px solid white;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tbackground-color: rgba(255,255,255,0.1);\n\t\t\t\t\tborder-radius: 6px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t#buttons > label {\n\t\t\t\t\tmargin-bottom: 30px;\n\t\t\t\t}\n\t\t\t\t#buttons > div:hover,\n\t\t\t\t#buttons > label:hover {\n\t\t\t\t\tbackground-color: rgba(255,255,255,0.4);\n\t\t\t\t}\n\t\t\t\t#buttons > input {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t<style id="custom_style">\n\t\t\t/* the styles will be set by script. */\n\t\t\t</style>\n\t\t\t<style id="header_style">\n\t\t\t/* the styles will be set by script. */\n\t\t\t</style>\n\t\t\t<style id="highlight_style">\n\t\t\t/* the styles will be set by script. */\n\t\t\t</style>\n\n\t\t\t<div id="controls">\n\t\t\t\t<div id="title">Datamate Plotter</div>\n\t\t\t\t<div id="min"><span>MIN:</span><input type="text" value="0"></div>\n\t\t\t\t<div id="max"><span>MAX:</span><input type="text" value="100"></div>\n\t\t\t\t<div id="scale"><span>SCALE:</span><input type="range" min="1" max="10" step="0.01" value="1"><span class="status">1</span></div>\n\t\t\t\t<div id="buttons">\n\t\t\t\t\t<input id="file-select" type="file" multiple=\'multiple\' accept=".csv" />\n\t\t\t\t\t<label id="file-select-label" for="file-select">SELECT CSVs</label>\n\t\t\t\t\t<div id="clearbutton">CLEAR ALL</div>\n\t\t\t\t\t<div id="closebox">CLOSE</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id="contents">\n\t\t\t\t<div id="graph"><canvas></canvas></div>\n\t\t\t\t<div id="table"></div>\n\t\t\t</div>\n\t\t</div>'}}class m{static version="1.1.5";static COLUMN="COLUMN";static ROW="ROW";static ALL="ALL";static singleton=null;static sharedInstance(){return null==m.singleton&&(m.singleton=new m),m.singleton}static get isAvailable(){return m.sharedInstance().isAvailable}static set title(t){m.sharedInstance().title=t}static get title(){return m.sharedInstance().title}static makeArea(t,e,n,s,i=1,a=1){m.sharedInstance().makeArea(t,e,n,s,i,a)}static bindArea(t,e=0,n=0){m.sharedInstance().bindArea(t,e,n)}static bindAreas(t){m.sharedInstance().bindAreas(t)}static area(t){return m.sharedInstance().area(t)}static makeNodes(t){}static bindNodes(t){}static layoutNodes(t){}static node(t,e){return m.sharedInstance().getNode(t,e)}static setValues(t,e=null){const n=m.sharedInstance();null===e?n.load(t):n.setValues(t,e)}static make(t,e=null){const n=m.sharedInstance();null===e?n.loadSync(t):n.setValues(t,e)}static value(t=null,e=null,n=0,s=0){if(null!==t||null!==e)return m.sharedInstance().getValue(t,e,n,s)}static rate(t=null,e=null,n=0,s=1,i=m.COLUMN){if(null!==t||null!==e)return m.sharedInstance().getRate(t,e,n,s,i)}static setHeaders(t){m.sharedInstance().setHeaders(t)}static getValue(t=null,e=null,n=0,s=0,i=!1){if(null!==t||null!==e)return m.sharedInstance().getValue(t,_index,n,s)}static getData(t=null,e=null){return null===t&&null===e?null:m.sharedInstance().getData(t,e)}static getNode(t=null,e=null){return m.sharedInstance().getNode(t,e)}static plot(){m.sharedInstance().showPanel()}static addFile(t){m.sharedInstance().addFile(t)}static load(t){m.sharedInstance().load(t)}static set ready(t){m.sharedInstance().callback=t}static map(t,e,n,s){return m.sharedInstance().map(t,e,n,s)}static get min(){return m.sharedInstance().min}static get max(){return m.sharedInstance().max}static get length(){return m.sharedInstance().length}static column(t){return m.sharedInstance().getColumn(t)}static columnAtIndex(t){return m.sharedInstance().getColumnAtIndex(t)}static name(t){return m.columnNameAtIndex(t)}static columnName(t){return m.columnNameAtIndex(t)}static columnNameAtIndex(t){return m.sharedInstance().table.getColumnAtIndex(t).name}static row(t){return m.sharedInstance().getRow(t)}static rowAtIndex(t){return m.sharedInstance().getRowAtIndex(t)}static play(t=1){m.sharedInstance().play(t)}static stop(){m.sharedInstance().stop()}static current(t,e=!1,n=0,s=0){return m.sharedInstance().current(t,e,n,s)}static currentIndex(){return m.sharedInstance().currentIndex()}constructor(){console.log("Datamate.js: version:",m.version),this.fileLoader=new n,this.fileLoader.callback=this.fileLoaderCallback,this.commonArea=new d,this.areas=new Object,this.table=null,this.isAvailable=!1,this.plotterRange=[0,100],this.title="Datamate.",this.panel=new u,this.panel.fileSelectionCallback=this.fileSelectionCallback.bind(this),this.transition=new r,window.addEventListener("keydown",function(t){80==t.keyCode&&t.shiftKey&&(this.panel.isVisible?this.hidePanel():this.showPanel())}.bind(this))}makeArea(t,e,n,s,i=1,a=1){this.commonArea=new d(t,e,n,s,i,a),this.isBoundArea=!1,this.areas=new Object;let l=i*a;for(let t=0;t<l;t++){let e=Math.floor(t%i),n=Math.floor(t/i);const s=this.commonArea.block(e,n,t);this.areas[t]=s}}bindArea(t,e=0,n=0){this.table.getColumn(t).setArea(this.commonArea.block(e,n)),this.isBoundArea=!0}bindAreas(t){this.areas=new Object;for(let e=0;e<t.length;e++){const n=t[e],s=Math.floor(e%this.commonArea.xBlocks),i=Math.floor(e/this.commonArea.xBlocks),a=this.commonArea.block(s,i,n);this.areas[n]=a}}area(t){return this.areas[t]}openPanel(){this.panel.min=this.plotterRange[0],this.panel.max=this.plotterRange[1],this.panel.scale=1,this.panel.load()}closePanel(){this.panel.unload()}showPanel(){this.panel.clearAll(),this.table&&this.panel.updateTable(this.table),this.panel.show()}hidePanel(){this.panel.hide()}foreground(t){this.panel.styles.color=t}background(t){this.panel.styles.background=t}graphColors(t){this.panel.graphColors=t}range(t,e){this.panel.min=t,this.panel.max=e}scalable(t,e){this.panel.scalableMin=t,this.panel.scalableMax=e}addFile(t){this.fileLoader.addFilePath(t)}loadSync(t=null,e=!0,n=!1){null!==t&&this.addFile(t),this.table=new h(n,e),this.fileLoader.loadSync();for(let t=0;t<this.fileLoader.dataset.length;t++){const s=this.fileLoader.dataset[t],i=new h(e,n);i.parseCSV(s),this.table.merge(i)}console.log("done.",this.table),this.isAvailable=!0,this.panel.clearAll(),this.panel.isLoaded&&this.panel.updateTable(this.table),this.callback&&this.callback()}async load(t=null,e=!0,n=!1){null!==t&&this.addFile(t),this.table=new h(n,e),await this.fileLoader.load();for(let t=0;t<this.fileLoader.dataset.length;t++){const s=this.fileLoader.dataset[t],i=new h(e,n);i.parseCSV(s),this.table.merge(i)}console.log("done.",this.table),this.isAvailable=!0,this.panel.clearAll(),this.panel.isLoaded&&this.panel.updateTable(this.table),this.callback&&this.callback()}fileSelectionCallback(t){this.fileLoader.clear();for(let e=0;e<t.length;e++)this.fileLoader.addFilePath(t[e]);this.load()}play(t=1){this.transition.start(t,this.table)}stop(){this.transition.stop()}current(t,e=!1,n=0,i=0){const a=this.table.getColumn(t);let l=this.transition.isPlaying?this.transition.current(t,e):this.table.getValue(t,0);return n!=i&&(l=s.map(l,a.min,a.max,n,i)),l}currentIndex(){return this.transition.currentIndex()}map(t,e,n,i=null){const a=this.table.getColumn(i),l=null!==a?a.min:this.min,o=null!==a?a.max:this.max;return s.map(t,l,o,e,n)}get min(){return this.table.min}get max(){return this.table.max}get length(){return this.table.getRowCount()}setHeaders(t){null==this.table&&(this.table=new h(!0,!1)),this.table.setHeaders(t)}setValues(t,e){null==this.table&&(this.table=new h(!0,!1)),this.table.setValues(t,e)}getValue(t,e,n=0,i=0){const a=this.table.getData(t,e);if(null===a)return;let l=a.value;return n!=i&&(l=s.map(l,a.column.min,a.column.max,n,i)),l}getRate(t,e,n=0,i=0,a=m.COLUMN){const l=this.table.getData(t,e);if(null===l)return;let o=a==m.COLUMN?l.value/l.column.sum:l.value/l.row.sum;return n!=i&&(o=s.map(o,0,1,n,i)),o}getData(t,e){return this.table.getData(t,e)}width(t){return this.table.getColumn(t).area().width}height(t){return this.table.getColumn(t).area().height}center(t){const e=this.table.getColumn(t).area();return{x:s.map(.5,0,1,e.x,e.x+e.width),y:s.map(.5,0,1,e.y,e.y+e.height)}}getNode(t=null,e=null){return this.table.getNode(t,e)}}return e.default})()}));